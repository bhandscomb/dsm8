dsm8 - multi CPU 8-bit disassembler (Z80/6502/65816)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Usage: dsm8 [options] <filename> [from to]

'options' controls behaviour of dsm8
'filename' states file to disassemble
'from' states offset of first byte to be considered as an opcode (hex)
'to' states offset of last byte to be considered as an opcode (hex)

-----------------------------------------------------------------------------

OPTIONS

In the following, 'X' denotes hex value, 'FN' denotes file name

-cCPU	CPU type - MUST specify this (CPU should be z80, 6502 or 65816)
-a	Address show off (default on)
-h	Hex show on (default off)
-r	Relative calculation on (default off)
-oX	Origin of code
-sX	Skip header
-tFN	Symbol table file name

-----------------------------------------------------------------------------

RELATIVE OFFSETS (MARKED WITH '+')
	Two digit	Actual offset (!)
	Four digit	Calculated target address (*) (!)

(*) If you are using symbol tables, you will only see a four digit relative
    offset if the target address does not appear in a symbol table. If the
    target address DOES appear, the whole offset output (including the '+')
    will be exchanged for the text of the symbol concerned.

(!) If you have selected 65816, offsets are either two or four digits long
    while calculated target addresses are six digits long.

    Also, note that symbol tables are only used on relative offsets if the
    '-r' option is specified - only absolutes are looked up if '-r' isn't
    specified on the command line.

-----------------------------------------------------------------------------

SYMBOL TABLES

Two forms of line are allowed (no blank lines!) - command lines and symbol
lines. A command line starts with a '#' which is directly followed by a
three (upper case) letter command. The currently supported commands are:

	DEC	Treat following symbol values as decimal
	HEX	Treat following symbol values as hex (default)
	REM	Ignore remainder of line (REMark)

A symbol line is simply a symbol value, followed by white space, followed by
the symbol's name.

-----------------------------------------------------------------------------

EXAMPLES

	Raw 6502 code at start of file, code start 0000, show hex and
	target relative addresses, whole file

		dsm8 -c6502 -h -r file.6502

	Z80 code with 23 byte header, code start at c000, show target
	relative addresses, only first and third 1k of file to be shown

		dsm8 -cz80 -oc000 -r -s17 file.6502 0 3ff
		dsm8 -cz80 -oc000 -r -s17 file.6502 800 bff

-----------------------------------------------------------------------------

IMPORTANT NOTE ABOUT 65816 DISASSEMBLER

The nature of the CPU registers in a 65816 and their effect on certain
opcodes, the disassembler output may not be exactly correct. While the
disassembler knows about the REP/SEP instructions, no other consideration
is made, and register widths last until another REP/SEP changes them. Both
the accumulator (A) and the index registers (X and Y) start out as being
treated as 8 bits wide.

This will improve in future versions when I've had time to think about it...

-----------------------------------------------------------------------------

VERSIONS

v1.0	25/07/95	First working version

v1.1	28/07/95	Added 65816 disassembler (rough'n'ready version)
			Various changes because of above
			Fixed hex notation of 6502 ('$' prefix)

-----------------------------------------------------------------------------

SEE ALSO

	dsmz80		Z80 Disassembler
	dsm6502		6502 Disassembler

dsm8 v1.0 was formed by combining the sources for dsmz80 and dsm6502 without
any duplication, thus resulting in a smaller size than for both originals.
